{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useReducer, useState } from 'react';\nimport data from './data';\nimport Swal from 'sweetalert2';\nimport Moment from 'moment';\nimport swal from 'sweetalert';\nexport default function useFunctions() {\n  _s();\n  const [API, setAPI] = useState([]);\n  const [reducer, setReducer] = useReducer(x => x + 1, 0);\n  useEffect(() => {\n    axios.get(data.Mainurl + data.get).then(res => {\n      setAPI(res.data);\n    });\n  }, [reducer]);\n  function Submit(e) {\n    e.preventDefault();\n    if (e.target[0].value !== '') {\n      axios.post(data.Mainurl + data.POST, {\n        \"pro_type\": e.target[0].value\n      }).then(res => {\n        const Toast = Swal.mixin({\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 3000,\n          timerProgressBar: true,\n          didOpen: toast => {\n            toast.addEventListener('mouseenter', Swal.stopTimer);\n            toast.addEventListener('mouseleave', Swal.resumeTimer);\n          }\n        });\n        Toast.fire({\n          icon: 'success',\n          title: 'ບັນທືກຂໍ້ມູນສຳເລັດ!'\n        });\n        setReducer();\n        setOpen(false);\n      });\n    }\n  }\n  function Reload() {\n    setReducer();\n  }\n  function Delete(e) {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this imaginary file!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true\n    }).then(willDelete => {\n      if (willDelete) {\n        axios.delete(data.Mainurl + data.del + e._id).then(res => {\n          swal(\"Poof! Your imaginary file has been deleted!\", {\n            icon: \"success\"\n          });\n          setReducer();\n        });\n      }\n    });\n  }\n  function is_active(e) {\n    axios.patch(data.Mainurl + data.patch + e._id, {\n      \"pro_status\": e.pro_status == 'true' ? 'false' : 'true'\n    }).then(res => {\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 3000,\n        timerProgressBar: true,\n        didOpen: toast => {\n          toast.addEventListener('mouseenter', Swal.stopTimer);\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n      });\n      Toast.fire({\n        icon: 'success',\n        title: e.pro_status !== 'true' ? 'ສະແດງປະເພດ ສຳເລັດ!' : 'ປິດສະແດງປະເພດ'\n      });\n      setReducer();\n    });\n  }\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  return {\n    Submit,\n    open,\n    handleOpen,\n    handleClose,\n    API,\n    Reload,\n    Delete,\n    is_active\n  };\n}\n_s(useFunctions, \"55aeNYGbcVxM4ovdl1bI03aOU6o=\");","map":{"version":3,"names":["axios","React","useEffect","useReducer","useState","data","Swal","Moment","swal","useFunctions","_s","API","setAPI","reducer","setReducer","x","get","Mainurl","then","res","Submit","e","preventDefault","target","value","post","POST","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","fire","icon","title","setOpen","Reload","Delete","text","buttons","dangerMode","willDelete","delete","del","_id","is_active","patch","pro_status","open","handleOpen","handleClose"],"sources":["H:/Apple-Funiture/Furnisture/src/Page/Admin/Product-type/useFunctions.js"],"sourcesContent":["import axios from 'axios'\r\nimport React, { useEffect, useReducer, useState } from 'react'\r\nimport data from './data'\r\nimport Swal from 'sweetalert2'\r\nimport Moment from 'moment'\r\nimport swal from 'sweetalert'\r\n\r\nexport default function useFunctions() {\r\n\r\n    const [API, setAPI] = useState([])\r\n    const [reducer, setReducer] = useReducer(x => x + 1, 0)\r\n    useEffect(() => {\r\n        axios.get(data.Mainurl + data.get).then((res) => {\r\n            setAPI(res.data)\r\n        })\r\n    }, [reducer])\r\n\r\n    function Submit(e) {\r\n        e.preventDefault()\r\n        if (e.target[0].value !== '') {\r\n            axios.post(data.Mainurl + data.POST, {\r\n                \"pro_type\": e.target[0].value\r\n            }).then((res) => {\r\n                const Toast = Swal.mixin({\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 3000,\r\n                    timerProgressBar: true,\r\n                    didOpen: (toast) => {\r\n                        toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                        toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                    }\r\n                })\r\n\r\n                Toast.fire({\r\n                    icon: 'success',\r\n                    title: 'ບັນທືກຂໍ້ມູນສຳເລັດ!'\r\n                })\r\n                setReducer()\r\n                setOpen(false);\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    function Reload() {\r\n        setReducer()\r\n    }\r\n\r\n    function Delete(e) {\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    axios.delete(data.Mainurl + data.del + e._id).then((res) => {\r\n                        swal(\"Poof! Your imaginary file has been deleted!\", {\r\n                            icon: \"success\",\r\n                        });\r\n                        setReducer()\r\n                    })\r\n                }\r\n            });\r\n    }\r\n\r\n    function is_active(e) {\r\n        axios.patch(data.Mainurl + data.patch + e._id, {\r\n            \"pro_status\": (e.pro_status == 'true' ? 'false' : 'true')\r\n        }).then((res) => {\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 3000,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                    toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                    toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                }\r\n            })\r\n\r\n            Toast.fire({\r\n                icon: 'success',\r\n                title: (e.pro_status !== 'true' ? 'ສະແດງປະເພດ ສຳເລັດ!' : 'ປິດສະແດງປະເພດ')\r\n            })\r\n            setReducer()\r\n        })\r\n    }\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    return {\r\n        Submit,\r\n        open,\r\n        handleOpen,\r\n        handleClose,\r\n        API,\r\n        Reload,\r\n        Delete,\r\n\r\n        is_active\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}