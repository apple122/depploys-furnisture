{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useReducer, useState } from 'react';\nimport data from './data';\nimport Swal from 'sweetalert2';\nimport swal from 'sweetalert';\nexport default function useFunctions() {\n  _s();\n  const [API, setAPI] = useState([]);\n  const [APITYPE, setTYPE] = useState([]);\n  const [Reducer, setReducer] = useReducer(x => x + 1, 0);\n  useEffect(() => {\n    axios.get(data.Mainurl + data.GET).then(res => {\n      setAPI(res.data.reverse());\n    });\n    axios.get(data.Mainurl + data.GETTYPE).then(res => {\n      setTYPE(res.data.reverse());\n    });\n  }, [Reducer]);\n  function Delete(e) {\n    swal({\n      title: \"ລົບຂໍ້ມູນ?\",\n      text: \"ທ່່ານຕ້ອງການລົບຂໍ້ມູນນີ້ ຫຼື ບໍ່!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true\n    }).then(willDelete => {\n      if (willDelete) {\n        axios.delete(data.Mainurl + data.DEL + e._id).then(res => {\n          swal(\"ລົບຂໍ້ມູນສຳເລັດ!\", {\n            icon: \"success\"\n          });\n          setReducer();\n        });\n      }\n    });\n  }\n  function is_active(e) {\n    axios.patch(data.Mainurl + data.PATCH + e._id, {\n      \"is_active\": e.is_active == \"true\" ? \"false\" : \"true\"\n    }).then(res => {\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 3000,\n        timerProgressBar: true,\n        didOpen: toast => {\n          toast.addEventListener('mouseenter', Swal.stopTimer);\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n      });\n      Toast.fire({\n        icon: 'success',\n        title: e.is_active == \"true\" ? 'ປິດການຂ່່າຍສຳເລັດ!' : 'ເປິດການຂ່່າຍສຳເລັດ!'\n      });\n      setReducer();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  const [IMG, setIMG] = useState('');\n  function Submit(e) {\n    e.preventDefault();\n    let array = [];\n    for (let x = 0; x < IMG.length; x++) {\n      array.push(IMG[x].name);\n    }\n    axios.post(data.Mainurl + data.POST, {\n      'v1typeId': e.target[1].value,\n      'v2image': array,\n      'v2Items': e.target[2].value,\n      'v2size': e.target[6].value,\n      'v2sprice': e.target[3].value,\n      'v2qty': e.target[4].value,\n      'v2color': e.target[5].value,\n      'v2remark': e.target[7].value\n    }).then(res => {\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 3000,\n        timerProgressBar: true,\n        didOpen: toast => {\n          toast.addEventListener('mouseenter', Swal.stopTimer);\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n      });\n      Toast.fire({\n        icon: 'success',\n        title: 'ບັນທືກຂໍ້ມູນສຳເລັດ!'\n      });\n      setReducer();\n      setOpen(false);\n      for (let x = 0; x < IMG.length; x++) {\n        const Multiple = new FormData();\n        Multiple.append('profile', IMG[x]);\n        axios.post('http://localhost:3022/Multiple/data', Multiple);\n      }\n    });\n  }\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const [OpenS, setOpenS] = useState(false);\n  const show = () => setOpenS(true);\n  const Close = () => setOpenS(false);\n  function resetData() {\n    setReducer();\n  }\n  async function Percent(e) {\n    const {\n      value: textIN\n    } = await Swal.fire({\n      title: 'ເປິດໂປຣ',\n      input: 'number',\n      inputLabel: 'ປ່ອນຈຳນວນເປີເຊັນເພືອທຳຫານເປິດໂປຣ',\n      inputPlaceholder: 'ກະລຸນາປ່ອນຈຳນວນໂປຣ'\n    });\n    if (textIN) {\n      axios.patch(data.Mainurl + data.PATCH + e._id, {\n        \"v2percent\": textIN\n      }).then(res => {\n        const Toast = Swal.mixin({\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 3000,\n          timerProgressBar: true,\n          didOpen: toast => {\n            toast.addEventListener('mouseenter', Swal.stopTimer);\n            toast.addEventListener('mouseleave', Swal.resumeTimer);\n          }\n        });\n        Toast.fire({\n          icon: 'success',\n          title: 'ເປີດໂປຣສຳເລັດ!'\n        });\n        setReducer();\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n  return {\n    API,\n    Delete,\n    APITYPE,\n    Submit,\n    open,\n    handleOpen,\n    handleClose,\n    setIMG,\n    OpenS,\n    show,\n    Close,\n    resetData,\n    is_active,\n    Percent\n  };\n}\n_s(useFunctions, \"qmUMHOv58IhosItzI+nEDITgiAY=\");","map":{"version":3,"names":["axios","React","useEffect","useReducer","useState","data","Swal","swal","useFunctions","_s","API","setAPI","APITYPE","setTYPE","Reducer","setReducer","x","get","Mainurl","GET","then","res","reverse","GETTYPE","Delete","e","title","text","icon","buttons","dangerMode","willDelete","delete","DEL","_id","is_active","patch","PATCH","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","fire","catch","err","console","log","IMG","setIMG","Submit","preventDefault","array","length","push","name","post","POST","target","value","setOpen","Multiple","FormData","append","open","handleOpen","handleClose","OpenS","setOpenS","show","Close","resetData","Percent","textIN","input","inputLabel","inputPlaceholder"],"sources":["H:/Apple-Funiture/Furnisture/src/Page/Admin/Product-Items/useFunctions.js"],"sourcesContent":["import axios from 'axios'\nimport React, { useEffect, useReducer, useState } from 'react'\nimport data from './data'\nimport Swal from 'sweetalert2'\nimport swal from 'sweetalert'\n\nexport default function useFunctions() {\n\n    const [API, setAPI] = useState([])\n    const [APITYPE, setTYPE] = useState([])\n    const [Reducer, setReducer] = useReducer(x => x + 1, 0)\n\n    useEffect(() => {\n        axios.get(data.Mainurl + data.GET).then((res) => {\n            setAPI(res.data.reverse())\n        })\n\n        axios.get(data.Mainurl + data.GETTYPE).then((res) => {\n            setTYPE(res.data.reverse())\n        })\n    }, [Reducer])\n\n    function Delete(e) {\n        swal({\n            title: \"ລົບຂໍ້ມູນ?\",\n            text: \"ທ່່ານຕ້ອງການລົບຂໍ້ມູນນີ້ ຫຼື ບໍ່!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then((willDelete) => {\n                if (willDelete) {\n                    axios.delete(data.Mainurl + data.DEL + e._id).then((res) => {\n                        swal(\"ລົບຂໍ້ມູນສຳເລັດ!\", {\n                            icon: \"success\",\n                        });\n                        setReducer()\n                    })\n                }\n            });\n    }\n\n    function is_active(e) {\n        axios.patch(data.Mainurl + data.PATCH + e._id, {\n            \"is_active\": (e.is_active == \"true\" ? \"false\" : \"true\")\n        }).then((res) => {\n            const Toast = Swal.mixin({\n                toast: true,\n                position: 'top-end',\n                showConfirmButton: false,\n                timer: 3000,\n                timerProgressBar: true,\n                didOpen: (toast) => {\n                    toast.addEventListener('mouseenter', Swal.stopTimer)\n                    toast.addEventListener('mouseleave', Swal.resumeTimer)\n                }\n            })\n\n            Toast.fire({\n                icon: 'success',\n                title: e.is_active == \"true\" ? 'ປິດການຂ່່າຍສຳເລັດ!' : 'ເປິດການຂ່່າຍສຳເລັດ!'\n            })\n            setReducer()\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n\n    const [IMG, setIMG] = useState('')\n\n    function Submit(e) {\n        e.preventDefault()\n\n        let array = []\n        for (let x = 0; x < IMG.length; x++) {\n            array.push(IMG[x].name)\n        }\n\n        axios.post(data.Mainurl + data.POST, {\n            'v1typeId': e.target[1].value,\n            'v2image': array,\n            'v2Items': e.target[2].value,\n            'v2size': e.target[6].value,\n            'v2sprice': e.target[3].value,\n            'v2qty': e.target[4].value,\n            'v2color': (e.target[5].value),\n            'v2remark': (e.target[7].value)\n        }).then((res) => {\n            const Toast = Swal.mixin({\n                toast: true,\n                position: 'top-end',\n                showConfirmButton: false,\n                timer: 3000,\n                timerProgressBar: true,\n                didOpen: (toast) => {\n                    toast.addEventListener('mouseenter', Swal.stopTimer)\n                    toast.addEventListener('mouseleave', Swal.resumeTimer)\n                }\n            })\n\n            Toast.fire({\n                icon: 'success',\n                title: 'ບັນທືກຂໍ້ມູນສຳເລັດ!'\n            })\n            setReducer()\n            setOpen(false);\n\n            for (let x = 0; x < IMG.length; x++) {\n                const Multiple = new FormData()\n                Multiple.append('profile', IMG[x])\n                axios.post('http://localhost:3022/Multiple/data', Multiple)\n            }\n        })\n    }\n\n    const [open, setOpen] = useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    const [OpenS, setOpenS] = useState(false);\n    const show = () => setOpenS(true);\n    const Close = () => setOpenS(false);\n\n    function resetData() {\n        setReducer()\n    }\n\n    async function Percent(e) {\n        const { value: textIN } = await Swal.fire({\n            title: 'ເປິດໂປຣ',\n            input: 'number',\n            inputLabel: 'ປ່ອນຈຳນວນເປີເຊັນເພືອທຳຫານເປິດໂປຣ',\n            inputPlaceholder: 'ກະລຸນາປ່ອນຈຳນວນໂປຣ'\n        })\n\n        if (textIN) {\n            axios.patch(data.Mainurl + data.PATCH + e._id, {\n                \"v2percent\": textIN\n            }).then((res) => {\n                const Toast = Swal.mixin({\n                    toast: true,\n                    position: 'top-end',\n                    showConfirmButton: false,\n                    timer: 3000,\n                    timerProgressBar: true,\n                    didOpen: (toast) => {\n                        toast.addEventListener('mouseenter', Swal.stopTimer)\n                        toast.addEventListener('mouseleave', Swal.resumeTimer)\n                    }\n                })\n\n                Toast.fire({\n                    icon: 'success',\n                    title: 'ເປີດໂປຣສຳເລັດ!'\n                })\n                setReducer()\n            }).catch((err) => {\n                console.log(err)\n            })\n        }\n\n    }\n\n    return {\n        API,\n        Delete,\n        APITYPE,\n\n        Submit,\n        open,\n        handleOpen,\n        handleClose,\n        setIMG,\n\n        OpenS,\n        show,\n        Close,\n        resetData,\n\n        is_active,\n        Percent\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}